package ${basePackage}.${packageName}.dto;


import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
import javax.validation.constraints.NotBlank;
import org.springframework.format.annotation.DateTimeFormat;

import lombok.EqualsAndHashCode;
import com.alibaba.fastjson.annotation.JSONField;
import org.springframework.format.annotation.DateTimeFormat;
import com.fasterxml.jackson.annotation.JsonFormat;

import org.jeecg.common.api.entity.BaseEntity;

/**
 * @Description: ${entityName?uncap_first} 列表
 */
@Data
@EqualsAndHashCode(callSuper = false)
@Accessors(chain = true)
public class ${entityName}ListVO extends BaseEntity {

    <#list columns as po>
        <#if po.java_column_name != 'id'
            && po.java_column_name != 'createBy'
            && po.java_column_name != 'createTime'
            && po.java_column_name != 'delFlag'
            && po.java_column_name != 'updateBy'
            && po.java_column_name != 'updateTime'
            && po.java_column_name != 'tenantId'
        >
    /** ${po.column_description} */
            <#if po.java_data_type =='java.util.Date'>
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @JSONField(format = "yyyy-MM-dd HH:mm:ss")
    @JsonFormat(timezone = "GMT+8",pattern = "yyyy-MM-dd HH:mm:ss")
            </#if>
            <#if po.column_description?contains('字典值')>
    @Dict(dicCode = "${po.column_name?lower_case}")
            </#if>
    @ApiModelProperty(value = "${po.column_description}<#if po.column_description?contains('字典值')> ${po.column_name?lower_case}</#if>")
    private <#if po.java_data_type=='java.lang.String'>String<#else>${po.java_data_type}</#if> ${po.java_column_name};

        </#if>
    </#list>

}
